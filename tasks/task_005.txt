# Task ID: 5
# Title: Implement Vectoriser Agent
# Status: pending
# Dependencies: 3, 4
# Priority: high
# Description: Develop the Vectoriser Agent that cleans, chunks, and embeds raw documents into vectors for storage and retrieval.
# Details:
1. Implement document cleaning and preprocessing:
   - HTML cleaning with trafilatura
   - PDF extraction with pdfminer-s
   - Text normalization and sanitization
2. Create intelligent chunking strategies:
   - Semantic chunking
   - Fixed-size chunking
   - Sliding window with overlap
3. Implement embedding generation using OpenAI embeddings
   - Add support for local embedding models as fallback
4. Create vector storage and indexing in Qdrant
5. Implement BM25 indexing in ElasticLite
6. Create metadata enrichment for chunks
7. Implement batch processing for efficiency
8. Add progress tracking and resumability
9. Create vector quality metrics

# Test Strategy:
1. Unit tests for cleaning and preprocessing
2. Test chunking strategies with various document types
3. Validate embedding quality and consistency
4. Test vector storage and retrieval
5. Benchmark processing performance
6. Test resumability after failures
7. Validate metadata enrichment

# Subtasks:
## 1. Implement VectoriserAgent Class [pending]
### Dependencies: None
### Description: Create the VectoriserAgent class that extends LLMAgent with document processing and embedding capabilities.
### Details:


## 2. Implement Document Cleaning and Normalization [pending]
### Dependencies: 5.1
### Description: Develop the system for cleaning and normalizing raw documents, including HTML/PDF parsing, text extraction, and content normalization.
### Details:


## 3. Implement Document Chunking [pending]
### Dependencies: 5.2
### Description: Create the system for chunking documents into appropriate segments for embedding, with overlap and semantic boundaries.
### Details:


## 4. Implement Embedding Generation [pending]
### Dependencies: 5.3
### Description: Develop the system for generating embeddings from document chunks using appropriate embedding models.
### Details:


## 5. Implement Vector Storage [pending]
### Dependencies: 5.4
### Description: Create the system for storing embeddings in Qdrant and document chunks in the database with appropriate metadata.
### Details:


